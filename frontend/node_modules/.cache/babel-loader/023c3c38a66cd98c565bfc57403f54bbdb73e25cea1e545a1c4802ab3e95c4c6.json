{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      showMessage: false,\n      registered: false,\n      errorMessage: \"\"\n    };\n  },\n  computed: {\n    passwordsMatch() {\n      return this.password === this.confirmpassword;\n    },\n    isValid() {\n      return this.password !== '' && this.confirmpassword !== '';\n    },\n    message() {\n      if (this.passwordsMatch) {\n        return 'Passwords match!';\n      } else {\n        return 'Passwords do not match.';\n      }\n    }\n  },\n  methods: {\n    checkMsg() {\n      this.dirty = this.confirmpassword !== '';\n      this.showMessage = this.dirty;\n      if (!this.dirty) {\n        this.showMessage = false;\n        this.errorMessage = '';\n      }\n    },\n    async register() {\n      try {\n        const res = await axios.post(\"register\", {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          confirmpassword: this.confirmpassword\n        });\n        this.name = \"\";\n        this.email = \"\";\n        this.password = \"\";\n        this.confirmpassword = \"\";\n        this.registered = true;\n        this.showMessage = false;\n        this.errorMessage = \"\";\n        this.$refs.registerForm.reset();\n        this.$emit('data-saved');\n        this.getInfo();\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","password","confirmpassword","showMessage","registered","errorMessage","computed","passwordsMatch","isValid","message","methods","checkMsg","dirty","register","res","post","$refs","registerForm","reset","$emit","getInfo","error","response"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n<div class=\"container\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-12 col-sm-8 col-md-6\">\r\n      <div class=\"card p-4 shadow\">\r\n        <form @submit.prevent=\"register\">\r\n          <div v-if=\"message === 'error'\" class=\"alert alert-danger\">Invalid response</div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"username\" class=\"form-label\">Username</label>\r\n            <input type=\"text\" v-model=\"username\" class=\"form-control\" id=\"username\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\" class=\"form-label\">Email</label>\r\n            <input type=\"text\" v-model=\"email\" class=\"form-control\" id=\"email\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"password\" class=\"form-label\">Password</label>\r\n            <input type=\"password\" v-model=\"password\" class=\"form-control\" id=\"password\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"passwordConfirm\" class=\"form-label\">Password Confirm</label>\r\n            <input type=\"password\" v-model=\"confirmpassword\" class=\"form-control\" id=\"passwordConfirm\">\r\n          </div>\r\n          <p class=\"alert-danger \">{{ errorMessage }}</p>\r\n          <button type=\"submit\" class=\"btn btn-primary mx-auto w-100 mb-3\">Register</button>\r\n          <div class=\"mt-2\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\nreturn {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmpassword: \"\",\r\n  showMessage: false,\r\n  registered: false,\r\n  errorMessage: \"\", \r\n\r\n};\r\n},\r\n\r\n  computed: {\r\n    passwordsMatch() {\r\n      return this.password === this.confirmpassword;\r\n    },\r\n    isValid() {\r\n      return this.password !== '' && this.confirmpassword !== '';\r\n    },\r\n    message() {\r\n      if (this.passwordsMatch) {\r\n        return 'Passwords match!';\r\n      } else {\r\n        return 'Passwords do not match.';\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    checkMsg() {\r\n      this.dirty = this.confirmpassword !== '';\r\n      this.showMessage = this.dirty;\r\n\r\n      if (!this.dirty) {\r\n        this.showMessage = false;\r\n        this.errorMessage = ''; \r\n      }\r\n    },\r\n    async register() {\r\n      try {\r\n        const res = await axios.post(\"register\", {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n          confirmpassword: this.confirmpassword,\r\n        })\r\n        this.name = \"\";\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n        this.confirmpassword = \"\";\r\n        this.registered = true;\r\n        this.showMessage = false;\r\n        this.errorMessage = \"\"; \r\n        this.$refs.registerForm.reset();\r\n        this.$emit('data-saved');\r\n        this.getInfo();\r\n          } catch (error) {\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        }\r\n                }\r\n              }\r\n            }\r\n          };\r\n</script>\r\n"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACT,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE;IAEhB,CAAC;EACD,CAAC;EAECC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACN,QAAO,KAAM,IAAI,CAACC,eAAe;IAC/C,CAAC;IACDM,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACP,QAAO,KAAM,EAAC,IAAK,IAAI,CAACC,eAAc,KAAM,EAAE;IAC5D,CAAC;IACDO,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACF,cAAc,EAAE;QACvB,OAAO,kBAAkB;MAC3B,OAAO;QACL,OAAO,yBAAyB;MAClC;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,KAAI,GAAI,IAAI,CAACV,eAAc,KAAM,EAAE;MACxC,IAAI,CAACC,WAAU,GAAI,IAAI,CAACS,KAAK;MAE7B,IAAI,CAAC,IAAI,CAACA,KAAK,EAAE;QACf,IAAI,CAACT,WAAU,GAAI,KAAK;QACxB,IAAI,CAACE,YAAW,GAAI,EAAE;MACxB;IACF,CAAC;IACD,MAAMQ,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,UAAU,EAAE;UACvChB,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,eAAe,EAAE,IAAI,CAACA;QACxB,CAAC;QACD,IAAI,CAACH,IAAG,GAAI,EAAE;QACd,IAAI,CAACC,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,QAAO,GAAI,EAAE;QAClB,IAAI,CAACC,eAAc,GAAI,EAAE;QACzB,IAAI,CAACE,UAAS,GAAI,IAAI;QACtB,IAAI,CAACD,WAAU,GAAI,KAAK;QACxB,IAAI,CAACE,YAAW,GAAI,EAAE;QACtB,IAAI,CAACW,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC;QACxB,IAAI,CAACC,OAAO,CAAC,CAAC;MACZ,EAAE,OAAOC,KAAK,EAAE;QAClB,IAAIA,KAAK,CAACC,QAAO,IAAKD,KAAK,CAACC,QAAQ,CAACxB,IAAG,IAAKuB,KAAK,CAACC,QAAQ,CAACxB,IAAI,CAACuB,KAAK,EAAE;UACtE,IAAI,CAAChB,YAAW,GAAIgB,KAAK,CAACC,QAAQ,CAACxB,IAAI,CAACuB,KAAK;QAC/C;MACQ;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}