{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-12 col-sm-8 col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card p-4 shadow\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\",\n  class: \"form-label\"\n}, \"Username\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"mb-3\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"passwordConfirm\",\n  class: \"form-label\"\n}, \"Password Confirm\", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"])),\n    ref: \"registerForm\"\n  }, [$options.message === 'error' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Invalid response\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    class: \"form-control\",\n    id: \"username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    class: \"form-control\",\n    id: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    class: \"form-control\",\n    id: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.confirmpassword = $event),\n    class: \"form-control\",\n    id: \"passwordConfirm\",\n    onInput: _cache[4] || (_cache[4] = (...args) => $options.checkMsg && $options.checkMsg(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.confirmpassword]])]), $data.showMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    disabled: !$options.isValid,\n    type: \"submit\",\n    class: \"btn btn-primary mx-auto w-100 mb-3\"\n  }, \"Register\", 8 /* PROPS */, _hoisted_15)], 544 /* HYDRATE_EVENTS, NEED_PATCH */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","register","ref","message","_hoisted_5","_hoisted_6","_hoisted_7","type","$data","name","$event","id","_hoisted_8","_hoisted_9","email","_hoisted_10","_hoisted_11","password","_hoisted_12","_hoisted_13","confirmpassword","onInput","checkMsg","showMessage","_hoisted_14","_toDisplayString","errorMessage","disabled","isValid","_hoisted_15"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-12 col-sm-8 col-md-6\">\r\n        <div class=\"card p-4 shadow\">\r\n          <form @submit.prevent=\"register\" ref=\"registerForm\">\r\n            <div v-if=\"message === 'error'\" class=\"alert alert-danger\">Invalid response</div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Username</label>\r\n              <input type=\"text\" v-model=\"name\" class=\"form-control\" id=\"username\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"email\" class=\"form-label\">Email</label>\r\n              <input type=\"text\" v-model=\"email\" class=\"form-control\" id=\"email\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Password</label>\r\n              <input type=\"password\" v-model=\"password\" class=\"form-control\" id=\"password\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"passwordConfirm\" class=\"form-label\">Password Confirm</label>\r\n              <input\r\n                type=\"password\"\r\n                v-model=\"confirmpassword\"\r\n                class=\"form-control\"\r\n                id=\"passwordConfirm\"\r\n                @input=\"checkMsg\"\r\n              >\r\n            </div>\r\n            <p v-if=\"showMessage\" class=\"alert alert-danger\">{{ errorMessage }}</p>\r\n            <button :disabled=\"!isValid\" type=\"submit\" class=\"btn btn-primary mx-auto w-100 mb-3\">Register</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmpassword: '',\r\n      showMessage: false,\r\n      registered: false,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    passwordsMatch() {\r\n      return this.password === this.confirmpassword;\r\n    },\r\n    isValid() {\r\n      return this.password !== '' && this.confirmpassword !== '';\r\n    },\r\n    message() {\r\n      if (this.passwordsMatch) {\r\n        return 'Passwords match!';\r\n      } else {\r\n        return 'Passwords do not match.';\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    checkMsg() {\r\n      this.showMessage = this.password !== this.confirmpassword;\r\n      this.errorMessage = this.showMessage ? 'Passwords do not match.' : '';\r\n    },\r\n\r\n    async register() {\r\n      try {\r\n        const res = await axios.post('register', {\r\n          name: this.name,\r\n          email: this.email,\r\n          password: this.password,\r\n          confirmpassword: this.confirmpassword,\r\n        });\r\n        this.name = '';\r\n        this.email = '';\r\n        this.password = '';\r\n        this.confirmpassword = '';\r\n        this.registered = true;\r\n        this.showMessage = false;\r\n        this.errorMessage = '';\r\n        this.$refs.registerForm.reset();\r\n        this.$emit('data-saved');\r\n        this.getInfo();\r\n      } catch (error) {\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA0B;;EAC9BA,KAAK,EAAC;AAAiB;;;EAEQA,KAAK,EAAC;;;EACjCA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAyD;EAAlDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAa,UAAQ;;EAG9CA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;GAAa,OAAK;;EAGxCA,KAAK,EAAC;AAAM;iCACfC,mBAAA,CAAyD;EAAlDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAa,UAAQ;;EAG9CA,KAAK,EAAC;AAAM;iCACfC,mBAAA,CAAwE;EAAjEC,GAAG,EAAC,iBAAiB;EAACF,KAAK,EAAC;GAAa,kBAAgB;;;EAS5CA,KAAK,EAAC;;;;uBA5BtCG,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJH,mBAAA,CAgCM,OAhCNI,UAgCM,GA/BJJ,mBAAA,CA8BM,OA9BNK,UA8BM,GA7BJL,mBAAA,CA4BM,OA5BNM,UA4BM,GA3BJN,mBAAA,CA0BO;IA1BAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAEG,GAAG,EAAC;MACxBF,QAAA,CAAAG,OAAO,gB,cAAlBZ,mBAAA,CAAiF,OAAjFa,UAAiF,EAAtB,kBAAgB,K,mCAC3Ef,mBAAA,CAGM,OAHNgB,UAGM,GAFJC,UAAyD,E,gBACzDjB,mBAAA,CAAqE;IAA9DkB,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEtB,KAAK,EAAC,cAAc;IAACuB,EAAE,EAAC;iDAA9BH,KAAA,CAAAC,IAAI,E,KAElCpB,mBAAA,CAGM,OAHNuB,UAGM,GAFJC,UAAmD,E,gBACnDxB,mBAAA,CAAmE;IAA5DkB,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAM,KAAK,GAAAJ,MAAA;IAAEtB,KAAK,EAAC,cAAc;IAACuB,EAAE,EAAC;iDAA/BH,KAAA,CAAAM,KAAK,E,KAEnCzB,mBAAA,CAGM,OAHN0B,WAGM,GAFJC,WAAyD,E,gBACzD3B,mBAAA,CAA6E;IAAtEkB,IAAI,EAAC,UAAU;+DAAUC,KAAA,CAAAS,QAAQ,GAAAP,MAAA;IAAEtB,KAAK,EAAC,cAAc;IAACuB,EAAE,EAAC;iDAAlCH,KAAA,CAAAS,QAAQ,E,KAE1C5B,mBAAA,CASM,OATN6B,WASM,GARJC,WAAwE,E,gBACxE9B,mBAAA,CAMC;IALCkB,IAAI,EAAC,UAAU;+DACNC,KAAA,CAAAY,eAAe,GAAAV,MAAA;IACxBtB,KAAK,EAAC,cAAc;IACpBuB,EAAE,EAAC,iBAAiB;IACnBU,OAAK,EAAAxB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAsB,QAAA,IAAAtB,QAAA,CAAAsB,QAAA,IAAAvB,IAAA,CAAQ;iEAHPS,KAAA,CAAAY,eAAe,E,KAMnBZ,KAAA,CAAAe,WAAW,I,cAApBhC,mBAAA,CAAuE,KAAvEiC,WAAuE,EAAAC,gBAAA,CAAnBjB,KAAA,CAAAkB,YAAY,oB,mCAChErC,mBAAA,CAAuG;IAA9FsC,QAAQ,GAAG3B,QAAA,CAAA4B,OAAO;IAAErB,IAAI,EAAC,QAAQ;IAACnB,KAAK,EAAC;KAAqC,UAAQ,iBAAAyC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}